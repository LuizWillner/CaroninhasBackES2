"""tabelas driver driver_vehicle e vehicle deletadas para renomear

Revision ID: 41d268b81fd2
Revises: e4e9181bcdb9
Create Date: 2024-05-13 11:18:19.154044

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '41d268b81fd2'
down_revision: Union[str, None] = 'e4e9181bcdb9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_driver_vehicle_fk_driver', table_name='driver_vehicle')
    op.drop_index('ix_driver_vehicle_fk_vehicle', table_name='driver_vehicle')
    op.drop_index('ix_driver_vehicle_id', table_name='driver_vehicle')
    op.drop_index('ix_driver_vehicle_plate', table_name='driver_vehicle')
    op.drop_table('driver_vehicle')
    op.drop_index('ix_driver_id_fk_user', table_name='driver')
    op.drop_index('ix_driver_license', table_name='driver')
    op.drop_table('driver')
    op.drop_index('ix_vehicle_brand', table_name='vehicle')
    op.drop_index('ix_vehicle_id', table_name='vehicle')
    op.drop_index('ix_vehicle_model', table_name='vehicle')
    op.drop_index('ix_vehicle_type', table_name='vehicle')
    op.drop_table('vehicle')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vehicle',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('vehicle_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('brand', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('color', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='vehicle_pkey'),
    sa.UniqueConstraint('type', 'brand', 'model', 'color', name='vehicle_type_brand_model_color_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_vehicle_type', 'vehicle', ['type'], unique=False)
    op.create_index('ix_vehicle_model', 'vehicle', ['model'], unique=False)
    op.create_index('ix_vehicle_id', 'vehicle', ['id'], unique=False)
    op.create_index('ix_vehicle_brand', 'vehicle', ['brand'], unique=False)
    op.create_table('driver',
    sa.Column('id_fk_user', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('license', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_fk_user'], ['user.id'], name='driver_id_fk_user_fkey'),
    sa.PrimaryKeyConstraint('id_fk_user', name='driver_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_driver_license', 'driver', ['license'], unique=True)
    op.create_index('ix_driver_id_fk_user', 'driver', ['id_fk_user'], unique=True)
    op.create_table('driver_vehicle',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fk_driver', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fk_vehicle', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('plate', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['fk_driver'], ['driver.id_fk_user'], name='driver_vehicle_fk_driver_fkey'),
    sa.ForeignKeyConstraint(['fk_vehicle'], ['vehicle.id'], name='driver_vehicle_fk_vehicle_fkey'),
    sa.PrimaryKeyConstraint('id', name='driver_vehicle_pkey')
    )
    op.create_index('ix_driver_vehicle_plate', 'driver_vehicle', ['plate'], unique=True)
    op.create_index('ix_driver_vehicle_id', 'driver_vehicle', ['id'], unique=False)
    op.create_index('ix_driver_vehicle_fk_vehicle', 'driver_vehicle', ['fk_vehicle'], unique=False)
    op.create_index('ix_driver_vehicle_fk_driver', 'driver_vehicle', ['fk_driver'], unique=False)
    # ### end Alembic commands ###
